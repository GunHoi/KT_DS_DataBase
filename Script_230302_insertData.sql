INSERT INTO ARTICLE
 (ARTICLE_NO
, EMAIL
, TITLE
, DESCRIPT
, REGIST_DATE
, SOURCE
, NOTI_YN)
VALUES
 ('AR-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-'
     || LPAD(SEQ_ARTICLE_PK.NEXTVAL, 5, '0')  -- ARTICLE_NO
, 'b@gmail.com' -- EMAIL
, '제목' ||SEQ_ARTICLE_PK.CURRVAL -- TITLE
, '내용' ||SEQ_ARTICLE_PK.CURRVAL  -- DESCRIPT
, SYSDATE -- REGIST_NATE
, '출처' -- SOURCE
, 'N') -- NOTI_YN
;

INSERT INTO ARTICLE
 (ARTICLE_NO
, EMAIL
, TITLE
, DESCRIPT
, REGIST_DATE
, SOURCE
, NOTI_YN)
VALUES
 ('AR-20230228-00011'  -- ARTICLE_NO
, 'a@gmail.com' -- EMAIL
, '제목공지' ||SEQ_ARTICLE_PK.CURRVAL -- TITLE
, '내용공지' ||SEQ_ARTICLE_PK.CURRVAL  -- DESCRIPT
, TO_DATE('20230228090000', 'YYYY-MM-DD HH24:MI:SS') -- REGIST_NATE
, '출처공지' -- SOURCE
, 'Y') -- NOTI_YN
;

INSERT INTO MEMBER
 (EMAIL
, NICKNAME
, VERIFIED_YN
, PASSWORD
, JOIN_DATE )
VALUES
 ('c@gmail.com' -- EMAIL
, '닉네임3' -- NICKNAME
, 'N' -- VERIFIED_YN
, 'PASSWORD3' -- PASSWORD
, SYSDATE) -- JOIN_DATE 
;

INSERT INTO REPLIES
 (REPLY_NO
, ARTICLE_NO
, EMAIL
, REPLY
, REGIST_DATE
, MODIFY_DATE
, PARENT_REPLY_NO)
VALUES
 ('RP-' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '-'
     || LPAD(SEQ_REPLIES_PK.NEXTVAL, 5, '0') -- REPLY_NO
, 'AR-20230302-00014' -- ARTICLE_NO
, 'b@gmail.com' --EMAIL
, '첫 댓글입니다.' --REPLY
, SYSDATE -- REGIST_NATE
, SYSDATE --MODIFY_DATE
, 'RP-20230302-00017') --PARENT_REPLY_NO 
;

SELECT SEQ_REPLIES_PK.CURRVAL
  FROM DUAL
;

-- 검증
SELECT *
  FROM REPLIES R
  LEFT JOIN ARTICLE A
    ON  A.ARTICLE_NO = R.ARTICLE_NO
  LEFT JOIN MEMBER M
    ON M.EMAIL = R.EMAIL
;
-- 검증
SELECT *
  FROM MEMBER AR_M
  JOIN ARTICLE A
    ON AR_M.EMAIL = A.EMAIL
  JOIN REPLIES R
    ON A.ARTICLE_NO = R.ARTICLE_NO
  JOIN MEMBER RP_M
    ON R.EMAIL = RP_M.EMAIL
;

SELECT SEQ_REPLIES_PK.NEXTVAL
  FROM DUAL
;

-- 고급유머 게시판 처럼 보이게 만드는 쿼리
SELECT AR.TITLE
     , M.NICKNAME -- EMAIL 이 아닌 NICKNAME을 보여줌
     , ROW_NUMBER() OVER(ORDER BY ARTICLE_NO ASC) AR_NUM -- 글번호가 될 것
     , CASE -- 올린지 하루 이상 지나면 연월일을 / 아니라면 시간을 보여준다.
         WHEN SYSDATE - REGIST_DATE >= 1 
           THEN 
             TO_CHAR(REGIST_DATE, 'YYYY-MM-DD')
           ELSE
             TO_CHAR(REGIST_DATE, 'HH24:MI')
       END REGIST_DATE
     , (SELECT COUNT(1)
          FROM REPLIES R
         WHERE R.ARTICLE_NO = AR.ARTICLE_NO) REPLY_CNT -- 댓글 수
  FROM ARTICLE AR
  JOIN MEMBER M
    ON AR.EMAIL = M.EMAIL
 ORDER BY ARTICLE_NO DESC
;

SELECT EMAIL 
     , NICKNAME 
     , VERIFIED_YN 
     , PASSWORD 
     , TO_CHAR(JOIN_DATE, 'YYYY-MM-DD HH24:MI:SS') JOIN_DATE
  FROM MEMBER
-- WHERE ?
;

SELECT ARTICLE_NO 
     , EMAIL 
     , TITLE 
     , DESCRIPT
     , TO_CHAR(REGIST_DATE, 'YYYY-MM-DD HH24:MI:SS') REGIST_DATE
     , SOURCE
     , NOTI_YN 
  FROM ARTICLE
;
